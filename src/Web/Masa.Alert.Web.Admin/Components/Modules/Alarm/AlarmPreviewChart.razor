@inherits AdminCompontentBase
<MRow Justify="JustifyTypes.SpaceBetween" Align="AlignTypes.Center">
    <MCol>
        <span class="emphasis--text btn">@T("YAxisUnits")：@ChartYAxisUnit</span>
        <span class="emphasis--text caption">@T("ChartPreviewTips")</span>
    </MCol>
    <MCol>
        <SDateTimeRangePicker @bind-StartTime="_startTime" @bind-EndTime="_endTime"  Style="border:none" />
    </MCol>
</MRow>
<div class="d-flex align-center justify-center">
    <MECharts Option="_option" Width="Width" Height="Height">
    </MECharts>
</div>

@code {
    [Parameter]
    public StringNumber Width { get; set; } = 761;

    [Parameter]
    public StringNumber Height { get; set; } = 219;

    [EditorRequired]
    [Parameter]
    public List<AlarmPreviewChartDataItemModel> ChartData { get; set; } = new();

    [Parameter]
    public string ChartYAxisUnit { get; set; } = string.Empty;

    protected override string? PageName { get; set; } = "AlarmChart";

    private DateTime? _startTime { get; set; }

    private DateTime? _endTime { get; set; }

    private object _option = new();

    protected override void OnParametersSet()
    {
        if (ChartData.Count==0)
        {
            return;
        }

        var legendData = ChartData.Select(x => x.Name);
        var seriesData = ChartData.Select(x => new
        {
            Name = x.Name,
            Type = "line",
            Stack = "Total",
            Data = x.Data
        });
        _option = new
        {
            Tooltip = new
            {
                Trigger = "axis",
            },
            Legend = new
            {
                Left = "3%",
                Data = legendData
            },
            Grid = new
            {
                Left = "3%",
                Right = "4%",
                Bottom = "3%",
                ContainLabel = true
            },
            XAxis = new
            {
                Type = "time",
                BoundaryGap = false
            },
            YAxis = new
            {
                Type = "value"
            },
            Series = seriesData
        };
    }
}
